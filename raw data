blood_donor:

id (Primary Key)
name (Donor's Name)
contact_number
blood_type
gender
date_of_birth
last_donation_date
notes (Additional notes about the donor)
age (Computed field)


blood_inventory:

id (Primary Key)
blood_type
quantity
expiration_date
donor_id (Foreign Key referencing blood_donor.id to link with the donor)
is_expired (Computed field)



blood_donation_record:

id (Primary Key)
donor_id (Foreign Key referencing blood_donor.id)
donation_date
quantity_donated
status (e.g., Pending, Completed, Rejected)
notes (Additional notes about the donation)
days_since_donation (Computed field)



























currently i am working on my custom module in odoo:
with models as given below:

1)bdonation_blood_group:

name
donor_ids

2)bdonation_blood_request:

patient_name
blood_group_id
hospital
urgency-{select from urgent, normal, month_later}
request_status -{select from pending , approved , rejected }
quantity _required


3)bdonation_donor:

name
contact_number
date_of_birth
age
marital_status
donor_image   
donation_interval
bmi
height 
weight 
gender 
occupation 
email_address 
blood_group_id 
haemoglobin_levels
notes 
donation_ids   
can_donate
event_ids 
    
    
    
    
4)bdonation_inventory:
blood_type
quantity
expiration_date
is_expired


5)bdonation_record:

donor_id
donation_id
quantity_doanted

now i want to use some bridge module that will help me manage my inventory and use exisiting salees, inventory etc modules to make my work more easier


i have two models given below. in total there are 4 products that i sell 
product 1)"whole blood"( represented by records of 'bdonation.record' model),
product 2)"Plasma"( represented by records of 'bdonation.converted.blood.component' model which have 'blood_component_type'='Plasma'),
product 1)"RBC"( represented by records of 'bdonation.converted.blood.component' model which have 'blood_component_type'='RBC'),
product 1)"Platelates"( represented by records of 'bdonation.converted.blood.component' model which have 'blood_component_type'='Platelates'), 

Now i want to sell these 4 products to customers .
Customers can make 'blood request' for any one of the 4 products.
blood request has states as ('new','approved','assign record to ship', 'complete request')
a) at starting request is 'new' state-  a button'approve' is visible , onclick this button will move state to 'approved'
b) at 'approved' state - in form view of curent record, a page is visible which shows all avaiable records(is_sold=false) related to that product type like 
eg : if product type for request is 'whole blood' then records of model 'BloodDonationRecord' are shown 
    similarly if product type for request is 'Plasma' then records of model 'ConvertedBloodComponent' are shown which have 'blood_component_type'='Plasma'

Then we can select requried records that are to be shipped for current request. Then click 'assign record to ship'.So, now for all the records assigned for current_request we set is_sold=true. Then request moves to state = 'assign record to ship'
 c) at 'assign record to ship' state- we can finalize the request and by click of button 'complete request'



1)class BloodDonationRecord(models.Model):
    _name = 'bdonation.record'
    _description = 'Blood Donation Record'

    donor_id = fields.Many2one('bdonation.donor', string='Donor', required=True)
    donation_date = fields.Date(string='Donation Date', default=fields.Date.today())
    quantity_donated = fields.Float(string='Quantity Donated(in ml)', default=470.0, readonly=True)
    status = fields.Selection([
        ('pending', 'Pending'),
        ('collected', 'Collected'),
        ('testing', 'Testing'),
        ('completed', 'Completed'),
        ('converted', 'Converted'),
        ('rejected', 'Rejected'),
    ], string='Status', default='pending')
    notes = fields.Text(string='Notes')
    tests_results = fields.One2many('bdonation.blood.sample.test.result', 'donation_record_id', string='Test Results')
    barcode = fields.Char(string='Barcode')
    converted_component_ids= fields.One2many('bdonation.converted.blood.component', 'record_id', string ='Converted Components')
    is_sold=fields.boolean(default=false)


2)class ConvertedBloodComponent(models.Model):
    _name = 'bdonation.converted.blood.component'
    _description = 'Converted Blood Component'

    record_id = fields.Many2one('bdonation.record', string='Record used for this componet extraction', required =True)
    blood_component_type = fields.Selection([
        ('plasma', 'Plasma'),
        ('rbc', 'Red Blood Cells (RBC)'),
        ('platelets', 'Platelets')
    ], string='Blood Component Type',required=True)
    quantity = fields.Float(string='Quantity (in ml)')
    is_sold=fields.boolean(default=false)











i have two models given below. I when record is in completed stage there should be button 'add to inventory' , onlick of this button,the new create is record in invetory for current_record and set current record state='added to inventory'

1)class BloodDonationRecord(models.Model):
    _name = 'bdonation.record'
    _description = 'Blood Donation Record'

    donor_id = fields.Many2one('bdonation.donor', string='Donor', required=True)
    donation_date = fields.Date(string='Donation Date', default=fields.Date.today())
    quantity_donated = fields.Float(string='Quantity Donated(in ml)', default=470.0, readonly=True)
    status = fields.Selection([
        ('pending', 'Pending'),
        ('collected', 'Collected'),
        ('testing', 'Testing'),
        ('completed', 'Completed'),
        ('converted', 'Converted'),
        ('added to inventory','Added to Inventory'),
        ('rejected', 'Rejected'),
    ], string='Status', default='pending')
    notes = fields.Text(string='Notes')
    tests_results = fields.One2many('bdonation.blood.sample.test.result', 'donation_record_id', string='Test Results')
    barcode = fields.Char(string='Barcode')
    converted_component_ids= fields.One2many('bdonation.converted.blood.component', 'record_id', string ='Converted Components')
    is_sold=fields.boolean(default=false)


2)class ConvertedBloodComponent(models.Model):
    _name = 'bdonation.converted.blood.component'
    _description = 'Converted Blood Component'

    record_id = fields.Many2one('bdonation.record', string='Record used for this componet extraction', required =True)
    blood_component_type = fields.Selection([
        ('plasma', 'Plasma'),
        ('rbc', 'Red Blood Cells (RBC)'),
        ('platelets', 'Platelets')
    ], string='Blood Component Type',required=True)
    quantity = fields.Float(string='Quantity (in ml)')
    is_sold=fields.boolean(default=false)




i have model(bdonation_inventory) , i want to sell records of the inventory in model(bdnoation_blood_request)

1)
class BloodInventory(models.Model):
    _name = 'bdonation.inventory'
    _description = 'Blood Bank Inventory'

    component_type = fields.Selection([
        ('A+', 'A+'),
        ('B+', 'B+'),
        ('AB+', 'AB+'),
        ('O+', 'O+'),
        ('A-', 'A-'),
        ('B-', 'B-'),
        ('AB-', 'AB-'),
        ('O-', 'O-'),
    ], string='Component Type', required=True)
    quantity = fields.Float(string='Quantity(in ml)', default=0.0)
    status = fields.Selection([
        ('inventory','Inventory'),
        ('sold', 'Sold'),
        ('expired','Expired')
    ], string ='Status', required=True, default='inventory')
    request_id= fields.Many2one('bdonation.blood.request', string= 'Record assigned to Request')


2)
class bdonationBloodRequest(models.Model):
    _name = "bdonation.blood.request"
    _description = "Request Blood"

    patient_name = fields.Char(required=True, string="Patient Name")
    hospital = fields.Char(required=True, string="Hospital's Name")
    urgency = fields.Selection(
        [
        ('urgent', 'Urgent'),
        ('normal', 'Normal'),
        ('month_later', 'After a month')
        ],
        string='Urgency', default='normal'
    )
    num_records_requested = fields.Integer(string='Number of Packets Requested', required=True)
    blood_group = fields.Selection([
        ('A+', 'A+'),
        ('B+', 'B+'),
        ('AB+', 'AB+'),
        ('O+', 'O+'),
        ('A-', 'A-'),
        ('B-', 'B-'),
        ('AB-', 'AB-'),
        ('O-', 'O-'),
    ], string='Component Type', required=True)
    state = fields.Selection([
        ('new', 'New'),
        ('approved', 'Approved'),
        ('assign_packets_to_request', 'Assign Packets to Request'),
        ('complete_request', 'Complete Request'),
    ], string='Status', default='new')
    

    if in request it is mentioned that 'num_records_requested'=2,
    When request is in state='approed' then user should be able to select 2 records 
    from all the shown records of model (inventory), When user click on button "Assign Packets to Request",
    then set state='assign_packets_to_request' 
    and change value of selected records of model (inventory) to state='sold'
    








